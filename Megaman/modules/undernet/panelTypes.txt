/*
Parameters:
Required:
	name - damageType name
Optional:
	damageMod = new Dictionary<string, float>() { { "Type", mod } }
		how much damageType "Type" will increase the damage done
	onstep = (Action <Actor, string>) delegate (Actor actor, string panel) { };
		function called when actor steps on panel
*/
using System;
using System.Collections.Generic;
using Megaman;
using Megaman.Actors;

var Null = new PanelType {
	name = "Null",
};

var Cracked = new PanelType {
	name = "Cracked",
};

var Broken = new PanelType {
	name = "Broken",
};

var Grass = new PanelType {
	name = "Grass",
	damageMod = new Dictionary<string, float>() { { "Fire", 1f } },
};

var Sand = new PanelType {
	name = "Sand",
};

var Metal = new PanelType {
	name = "Metal",
	damageMod = new Dictionary<string, float>() { { "Elec", 1f } },
};

var Ice = new PanelType {
	name = "Ice",
	onStep = (Action <Actor, string>) delegate (Actor actor, string panel) 
	{
		if (actor.canMove(actor.move) && !actor.FlotShoe && !actor.Body["Aqua"] &&
			actor.stage.getPanelType(actor.position + actor.move).Equals("Ice"))
			{
				actor.isSliding = true;
				actor.Move(actor.move);
		}
	},
};

var Swamp = new PanelType {
	name = "Swamp",
};

var Lava = new PanelType {
	name = "Lava",
	damageMod = new Dictionary<string, float>() { { "Aqua", 1f } },
	onStep = (Action <Actor, string>) delegate (Actor actor, string panel) 
	{ 
		actor.doDamage(actor.position, 50, new List<string> { "Fire" }, new List<string> { "Panel" }, null);
		actor.stage.setPanel(actor.position, "Null"); 
	},
};

var Holy = new PanelType {
	name = "Holy",
};

var Hole = new PanelType {
	name = "Hole",
};